#rand.

*This documentation is in progress. The code is not yet available.*

= Randomizer =

The Randomizer library is great for producing mock data. Allows dozens of ways to randomize numbers, strings, words, sentences, and dates. Includes tiny libraries of the most commonly used words (in order), the most commonly used letters (in order) and personal names that can be used as first or last. For making sentences, "wurds" are used - words with scrambled vowels so they aren't actual words, but look more like lorem ipsum. Change the property realWords to true to use "words" instead of "wurds" (it can also produce humorous results).

== USAGE ==
    include file:
        <script src="clubajax/lang/rand.js"></script>

== Tests ==
    See tests/rand.html

== Properties ==
    * realWords: Boolean
        Default false. Randomly generated sentences, titles, and words by default use "wurds" - words with scrambled vowels so they aren't actual words, but look more like lorem ipsum.
    * words: Array
        The array of words used for mock sentences and titles. List is arranged by most commonly used in writing, so using a weight will return more common words.
    * wurds: Array
        The default content used for sentences and titles. Wurds are words with their vowels scrambled to simulate lorem ipsum.
    * names: Array
        An array of names chosen because they can be used as first or last names.
    * letters: Array
        All 26 characters in the alphabet, arranged by most common used in writing.

== Methods ==
    * loop _(amount, function, content)_
       Similar to a forEach, but instead of an array as the first argument, pass in a number. The next argument, the function will be called that many times. The optional third argument is the context (this).
{{{
rand.loop(3, function(i){
    console.log("loops three times");
}, this);
}}}

    * trim _(string)_
        Removes spaces from both ends of a string.
{{{
var s = rand.trim("  too much space   ");
s == "too much space";
}}} 

    * pad _(string)_
        Adds a zero to the beginning of a number if it is only one digit. Returns a string.
{{{
var n1 = rand.pad(9);
var n2 = rand.pad(10);
n1 == "09";
n2 == "10";
}}}

    * cap _(string)_
        Capitalizes the first letter of a string.
{{{
var s = rand.cap("mike wrote this.");
s == "Mike write this.";
}}}
        
    * weight _(number, exponent)_
        This method is mostly for internal use, but a _weight_ argument is used in other methods which calls this. The first argument is a float between zero and 1. The second is an exponent, which can be any number (although the decimals between 0 and 1 don't work as expected). Whole numbers or decimals over 1 can be used to weight a return closer to the beginning of a list. Negative numbers will weight the return closer to the end of a list. Decimals can be used if they are less then -1 or greater than 1.
{{{
var little = rand.weight(.5, 5);
var big = rand.weight(.5, -5);
little == 0.03125;
big == 0.96875;
}}}

    * n _(number weight)_
        The key method. Returns a whole number between zero and the amount of first argument passed. Second argument is the weight. Larger positive weight returns closer to zero, larger negative weight returns closer to the first argument passed.
{{{
var r1 = rand.n(10); // random number between 0-10, no weight
var r2 = rand.n(100, 2); // random number between 0-100, weighted toward 0
var r3 = rand.n(500, -5); // random number between 0-500, weighted toward 500
}}}

    * range _(minimum, maximum, weight)_
        Returns a random number ranging between the first and second arguments, weighted.
{{{
var r1 = rand.range(10, 20, 1); // returns number between 10 and 20, weighted towards 10
}}}

    * element _(thing, weight)_
        Will return a random element of whatever object is passed. The first argument can be anything. 
            * Object: One of the objects values will be returned.
            * Array: One of the array elements is returned.
            * Number: Like calling rand.n(num);
            * String: Returns differently depending on the format (determined in this order):
                * Has a period: Assumed to be a paragraph, and will return a random sentence.
                * Has a space: Assumed to be a sentence and will return a random word.
                * Else: Returns a random character.
{{{
rand.element({a:1, b:"rand", c:[1,2,3]}); // would return either 1, "rand" or [1,2,3]
rand.element([1,2,3]); // returns either 1,2, or 3
rand.element(3); // returns between 0-3
rand.element("Hello. How are you."); // Returns either "Hello." or "How are you."
rand.element("How are you"); // returns either "How", "are", or "you"
rand.element("alpha"); // returns one of the characters
}}}

    * chars _(minimum, maximum, weight)_
        Will return a string of random characters with a random length between the minimum and maximum passed values, with an optional weight.
{{{
rand.chars(3, 12, -3); // returns a string of random characters between 3-12 long, weighted toward 12.
}}}
    * name _(caseOptions)_
        Returns a random proper name from a list chosen because they can be used as first or last names. _caseOptions_ : 0 or undefined returns lower case, 1 returns title case, and 2 returns upper case.
{{{
rand.name(2); // could return ARTHUR
}}}

    * bignumber _(length)_
        Returns a stringified number, the length as passed by the argument.
{{{
rand.bignumber(10); // May return "0275397661";
}}}

    * date _(minDate, maxDate, delimiter, weight)_
        Returns a random date. minDate and maxDate arguments can be either date objects or anything that can be converted into a date object, such as the seconds from 1970, or a formatted string like "11/20/1964".
            * No options: Will return a date object between today and one year from today.
            * minDate only: Returns object between passed date and one year from that.
            * minDate, maxDate: Returns object between passed dates.
            * delimiter: Two options. If the string "time" is passed, returns the date as seconds from 1970. Anything else returns a string using the delimiter. Passing "-" may return "11-20-1964".
            * weight: Weights the two date objects for the random return.

 